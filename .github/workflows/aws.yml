name: Beelder-Deploy-Pipeline

permissions: write-all

on: 
  push:
    branches: [master]

env:
  AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}    # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: ${{ secrets.TEMPLATE_1 }}        # set this to your Amazon ECR repository name
  ECS_SERVICE: ${{ secrets.MAIN_SERVICE }}         # set this to your Amazon ECS service name
  ECS_CLUSTER: ${{ secrets.MAIN_CLUSTER }}         # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .aws/task-definition.json   # set this to the path to your Amazon ECS task definition
                                                   # file, e.g. .aws/task-definition.json
jobs:
  pull_request:
    runs-on: ubuntu-latest
    steps:
      - name: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::133610437896:role/Github
          role-session-name: github-actions
          aws-region: ${{ env.AWS_REGION }}
    
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./build/git_update.sh -v patch

      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: latest #  ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.ECR_REPOSITORY }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true